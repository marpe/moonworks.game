// ReSharper disable CheckNamespace
#pragma warning disable CS8618
#nullable enable
// <auto-generated />
namespace MyGame;

public static class Worlds
{
    public static class World
    {
        public static readonly Guid WorldIid = Guid.Parse("2c81d720-b4d0-11ec-9871-056972512958");
        public static readonly Guid Level_1 = Guid.Parse("2038b2a1-8dc0-11ec-a0e2-e5abc8178676");
        public static readonly Guid Level_0 = Guid.Parse("2039c410-8dc0-11ec-a0e2-db95660971f6");
    }
}

public enum EnemyType
{
    YellowBee,
    BlueBee,
    Slug,
}

public class LevelFields
{
    public float Float;
    public TilesetRectangle[] Tile;
    public string? Multilines;
}

public enum EntityType
{
    Enemy,
    Gun_Pickup,
    Player,
    RefTest,
}

public partial class Entity
{
    public Guid Iid;
    public Point Position;
    public Point Size;
    public static Dictionary<EntityType, Type> TypeMap = new()
    {
        { EntityType.Enemy, typeof(Enemy) },
        { EntityType.Gun_Pickup, typeof(Gun_Pickup) },
        { EntityType.Player, typeof(Player) },
        { EntityType.RefTest, typeof(RefTest) },
    };

}

public partial class Enemy : Entity
{
    public Point[] Wander;
    public EnemyType Type;
    public Color Color;
}

public partial class Gun_Pickup : Entity
{
}

public partial class Player : Entity
{
}

public partial class RefTest : Entity
{
    public FieldInstanceEntityReference? Test;
    public TilesetRectangle? TileTest;
    public float? Float;
    public EnemyType? EnemyType;
    public FieldInstanceEntityReference? AnotherRef;
}
